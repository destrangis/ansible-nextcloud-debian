# Hiawatha main configuration file
#

# VARIABLES
# With 'set', you can declare a variable. Make sure the name of the
# variable doesn't conflict with any of the configuration options.
# The variables are case-sensitive and cannot be redeclared.
#
#set LOCALHOST = 127.0.0.0/8


# GENERAL SETTINGS
#
ServerId = www-data
ConnectionsTotal = 1000
ConnectionsPerIP = 25
SystemLogfile = /var/log/hiawatha/system.log
GarbageLogfile = /var/log/hiawatha/garbage.log


# BINDING SETTINGS
# A binding is where a client can connect to.
#
Binding {
    Port = 80
}

Binding {
    Port = 443
    TLScertFile = {{cert_name}}
}

#
#Binding {
#   Port = 443
#   TLScertFile = tls/hiawatha.pem
#   Interface = 127.0.0.1
#   MaxRequestSize = 2048
#   TimeForRequest = 30
#}


# BANNING SETTINGS
# Deny service to clients who misbehave.
#
#BanOnGarbage = 300
#BanOnMaxPerIP = 60
#BanOnMaxReqSize = 300
#KickOnBan = yes
#RebanDuringBan = yes


# COMMON GATEWAY INTERFACE (CGI) SETTINGS
# These settings can be used to run CGI applications.
#
#CGIhandler = /usr/bin/perl:pl
#CGIhandler = /usr/bin/php-cgi:php
#CGIhandler = /usr/bin/python:py
#CGIhandler = /usr/bin/ruby:rb
#CGIhandler = /usr/bin/ssi-cgi:shtml
#CGIextension = cgi
#

# URL TOOLKIT
# This URL toolkit rule was made for the Banshee PHP framework,
# which can be downloaded from http://www.banshee-php.org/
#
#UrlToolkit {
#   ToolkitID = banshee
#   RequestURI isfile Return
#   Match ^/(css|files|fonts|images|js)($|/) Return
#   Match ^/(favicon.ico|robots.txt)$ Return
#   Match [^?]*(\?.*)? Rewrite /index.php$1
#}


# DIRECTORY SETTINGS
# You can specify some settings per directory.
#
#Directory {
#   DirectoryID = static
#   Path = /css, /fonts, /images, /js
#   ExpirePeriod = 2 weeks
#}
#
#Directory {
#   DirectoryID = files
#   Path = /files
#   ShowIndex = yes
#   StartFile = index.html
#   ExecuteCGI = no
#}


# DEFAULT WEBSITE
# It is wise to use your IP address as the hostname of the default website
# and give it a blank webpage. By doing so, automated webscanners won't find
# your possible vulnerable website.
#
Hostname = 127.0.0.1
WebsiteRoot = /var/www
StartFile = index.html
AccessLogfile = /var/log/hiawatha/access.log
ErrorLogfile = /var/log/hiawatha/error.log


FastCGIserver {
    FastCGIid = PHP7
    ConnectTo = {{fpm_socket}}
    Extension = php
}

UrlToolkit {
    ToolkitID = nextcloud
    Match ^/$ Rewrite /index.php
    Match ^/.well-known/host-meta\.json(\?(.*))? Redirect /public.php?service=host-meta-json&$2
    Match ^/.well-known/host-meta(\?(.*))? Redirect /public.php?service=host-meta&$2
    Match ^/.well-known/carddav(\?(.*))? Redirect /remote.php/dav/$1
    Match ^/.well-known/caldav(\?(.*))? Redirect /remote.php/dav/$1
    Match ^/.well-known/webfinger(\?(.*))? Redirect /remote.php?service=webfinger&$2
    Match ^/remote/([^?]*)(\?.*)? Redirect /remote.php$2
    Match ^/(build|tests|config|lib|3rdparty|templates) DenyAccess
    Match ^/.well-known/acme-challenge/.* Return
    Match ^/(\.|autotest|occ|issue|indie|db_|console).* DenyAccess
}

# VIRTUAL HOSTS
# Use a VirtualHost section for each website you want to host.
#
VirtualHost {
    Hostname = {{server_hostname}}
    #TLScertFile = /etc/letsencrypt/live/oc.destrangis.com/fullchain.pem
    TLScertFile = {{cert_name}}
    WebsiteRoot = /opt/nextcloud
    StartFile = index.html
    AccessLogfile = /var/log/hiawatha/nc2_access.log
    ErrorLogfile = /var/log/hiawatha/nc2_error.log
    UseFastCGI = PHP7
    TimeForCGI = 1200
    UseToolkit = nextcloud
    WebDAVapp = yes
    EnablePathInfo = yes
    RequireTLS = yes
    CustomHeader = Strict-Transport-Security: max-age=15552000; includeSubDomains; preload
}
